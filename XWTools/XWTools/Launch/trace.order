_main
___copy_helper_block_e8_32s
+[IQKeyboardManager sharedManager]
___34+[IQKeyboardManager sharedManager]_block_invoke
-[IQKeyboardManager init]
___25-[IQKeyboardManager init]_block_invoke
-[IQKeyboardManager setRegisteredClasses:]
-[IQKeyboardManager registerAllNotifications]
-[IQKeyboardManager registerTextFieldViewClass:didBeginEditingNotificationName:didEndEditingNotificationName:]
-[IQKeyboardManager setResignFirstResponderGesture:]
-[IQKeyboardManager resignFirstResponderGesture]
-[IQKeyboardManager shouldResignOnTouchOutside]
_CGPointMake
-[IQKeyboardManager setTopViewBeginOrigin:]
-[IQKeyboardManager setTopViewBeginOriginWhilePopGestureRecognizerActive:]
-[IQKeyboardManager setAnimationDuration:]
-[IQKeyboardManager setAnimationCurve:]
-[IQKeyboardManager setEnable:]
-[IQKeyboardManager showLog:]
-[IQKeyboardManager setKeyboardDistanceFromTextField:]
-[IQKeyboardManager setShouldPlayInputClicks:]
-[IQKeyboardManager setShouldResignOnTouchOutside:]
-[IQKeyboardManager privateShouldResignOnTouchOutside]
-[IQKeyboardManager setOverrideKeyboardAppearance:]
-[IQKeyboardManager setKeyboardAppearance:]
-[IQKeyboardManager setEnableAutoToolbar:]
-[IQKeyboardManager privateIsEnableAutoToolbar]
-[IQKeyboardManager addToolbarIfRequired]
-[IQKeyboardManager responderViews]
-[IQKeyboardManager setShouldShowToolbarPlaceholder:]
-[IQKeyboardManager setToolbarManageBehaviour:]
-[IQKeyboardManager setLayoutIfNeededOnUpdate:]
+[UIView(AZGradient) layerClass]
-[UIView(IQToolbarAddition) addDoneOnKeyboardWithTarget:action:]
-[UIView(IQToolbarAddition) addDoneOnKeyboardWithTarget:action:titleText:]
-[IQBarButtonItemConfiguration initWithBarButtonSystemItem:action:]
-[UIView(IQToolbarAddition) addKeyboardToolbarWithTarget:titleText:rightBarButtonConfiguration:previousBarButtonConfiguration:nextBarButtonConfiguration:]
-[UIView(IQToolbarAddition) keyboardToolbar]
+[IQToolbar initialize]
-[IQToolbar initWithFrame:]
-[IQToolbar initialize]
-[IQToolbar sizeThatFits:]
+[UIView(IQToolbarAddition) flexibleBarButtonItem]
+[IQBarButtonItem initialize]
-[IQBarButtonItem initWithBarButtonSystemItem:target:action:]
-[IQToolbar titleBarButton]
-[IQTitleBarButtonItem initWithTitle:]
+[UILabel(AZGradient) layerClass]
-[IQTitleBarButtonItem setTitle:]
-[IQTitleBarButtonItem setTitleFont:]
-[IQToolbar doneBarButton]
-[IQBarButtonItem isSystemItem]
-[IQBarButtonItemConfiguration image]
-[IQBarButtonItemConfiguration title]
-[IQBarButtonItemConfiguration barButtonSystemItem]
-[IQBarButtonItemConfiguration action]
-[IQBarButtonItem invocation]
-[IQBarButtonItem setInvocation:]
-[IQToolbar setDoneBarButton:]
-[IQBarButtonItem dealloc]
-[IQBarButtonItem .cxx_destruct]
-[IQToolbar setBarStyle:]
-[IQTitleBarButtonItem selectableTitleColor]
-[IQTitleBarButtonItem titleButton]
-[IQBarButtonItemConfiguration .cxx_destruct]
-[UIView(IQToolbarAddition) addPreviousNextDoneOnKeyboardWithTarget:previousAction:nextAction:doneAction:]
-[UIView(IQToolbarAddition) addPreviousNextDoneOnKeyboardWithTarget:previousAction:nextAction:doneAction:titleText:]
+[UIImage(IQKeyboardToolbarNextPreviousImage) keyboardPreviousImage]
+[UIImage(IQKeyboardToolbarNextPreviousImage) keyboardPreviousiOS10Image]
-[IQBarButtonItemConfiguration initWithImage:action:]
+[UIImage(IQKeyboardToolbarNextPreviousImage) keyboardNextImage]
+[UIImage(IQKeyboardToolbarNextPreviousImage) keyboardNextiOS10Image]
-[IQToolbar previousBarButton]
-[IQToolbar fixedSpaceBarButton]
-[IQToolbar nextBarButton]
-[IQKeyboardManager setDisabledDistanceHandlingClasses:]
-[IQKeyboardManager setEnabledDistanceHandlingClasses:]
-[IQKeyboardManager setDisabledToolbarClasses:]
-[IQKeyboardManager setEnabledToolbarClasses:]
-[IQKeyboardManager setToolbarPreviousNextAllowedClasses:]
-[IQKeyboardManager setDisabledTouchResignedClasses:]
-[IQKeyboardManager setEnabledTouchResignedClasses:]
-[IQKeyboardManager setTouchResignedGestureIgnoreClasses:]
-[IQKeyboardManager setShouldToolbarUsesTextFieldTintColor:]
-[IQToolbar dealloc]
-[IQToolbar .cxx_destruct]
-[IQTitleBarButtonItem dealloc]
-[IQTitleBarButtonItem setInvocation:]
-[IQTitleBarButtonItem .cxx_destruct]
-[AppDelegate application:didFinishLaunchingWithOptions:]
-[AppDelegate setWindow:]
+[CXWDataManager shareManager]
___30+[CXWDataManager shareManager]_block_invoke
-[CXWDataManager isFirstLaunch]
-[XWTabbarController viewDidLoad]
-[XWTabbar init]
+[UIColor(CHEXString) colorWithHexString:]
+[UIColor(CHEXString) colorWithHexString:WithAlpha:]
_CGRectMake
-[XWTabbar centerBtn]
-[XWTabbarCenterBtn initWithFrame:]
-[XWTabbarCenterBtn xw_set]
+[UIFont(CXWFont) CXWFontWithName:size:]
-[XWTabbarCenterBtn setIsSeleted:]
-[UIView(AZGradient) az_setGradientBackgroundWithColors:locations:startPoint:endPoint:]
-[UIView(AZGradient) setAz_colors:]
-[UIView(AZGradient) az_colors]
-[UIView(AZGradient) setAz_locations:]
-[UIView(AZGradient) az_locations]
-[UIView(AZGradient) setAz_startPoint:]
-[UIView(AZGradient) az_startPoint]
-[UIView(AZGradient) setAz_endPoint:]
-[UIView(AZGradient) az_endPoint]
-[XWTabbarController setChildVC]
-[CXWBaseNavigationController pushViewController:animated:]
-[CXWBaseNavigationController viewDidLoad]
-[UINavigationController(CXWCustomBar) CXWSetCustomBar]
-[UINavigationController(CXWCustomBar) cxw_backgradView]
-[UIView(AZGradient) CXWSetPublicGradient]
+[UIImage(Extension) convertViewToImage:]
-[XWTestHomeViewController init]
-[WMPageController initWithNibName:bundle:]
-[WMPageController wm_setup]
-[WMPageController setAutomaticallyCalculatesItemWidths:]
-[WMPageController setPreloadPolicy:]
-[WMPageController setCachePolicy:]
-[WMPageController memCache]
-[WMPageController setDelegate:]
-[WMPageController setDataSource:]
-[WMPageController setTitleSizeNormal:]
-[WMPageController setTitleSizeSelected:]
-[WMPageController setMenuViewStyle:]
-[XWTestHomeViewController musicCategories]
-[WMPageController setMenuItemWidth:]
-[XWTestHomeViewController setViewTop:]
-[XWTestHomeViewController redView]
-[WMPageController forceLayoutSubviews]
-[WMPageController childControllersCount]
-[WMPageController dataSource]
-[XWTestHomeViewController numbersOfChildControllersInPageController:]
-[WMPageController wm_calculateSize]
-[WMPageController menuView]
-[XWTestHomeViewController pageController:preferredFrameForMenuView:]
-[XWTestHomeViewController viewDidLoad]
-[WMPageController viewDidLoad]
-[CXWBaseViewController viewDidLoad]
-[CXWRootViewController viewDidLoad]
-[CXWRootViewController CXWAddNaviSubviews]
-[CXWRootViewController CXWAddSubviews]
-[WMPageController scrollView]
-[XWTestHomeViewController pageController:preferredFrameForContentView:]
-[WMPageController wm_addScrollView]
-[WMPageController bounces]
-[WMPageController scrollEnable]
-[WMPageController setScrollView:]
-[WMPageController selectIndex]
-[WMPageController wm_initializedControllerWithIndexIfNeeded:]
-[WMPageController wm_addViewControllerAtIndex:]
-[WMPageController initializeViewControllerAtIndex:]
-[XWTestHomeViewController pageController:viewControllerAtIndex:]
-[WMTableViewController init]
-[WMPageController values]
-[WMPageController childViewFrames]
-[WMTableViewController viewDidLoad]
-[WMPageController willEnterController:atIndex:]
-[WMPageController delegate]
-[WMPageController displayVC]
-[WMPageController wm_backToPositionIfNeeded:atIndex:]
-[WMPageController rememberLocation]
-[WMPageController wm_postAddToSuperViewNotificationWithIndex:]
-[WMPageController postNotification]
-[WMPageController setCurrentViewController:]
-[WMPageController wm_addMenuView]
-[WMMenuView initWithFrame:]
-[WMMenuView setFrame:]
-[WMMenuView showOnNavigationBar]
-[WMMenuView scrollView]
-[WMMenuView setProgressViewCornerRadius:]
-[WMMenuView progressView]
-[WMMenuView setProgressHeight:]
-[WMMenuView setDelegate:]
-[WMMenuView setDataSource:]
-[WMPageController menuViewStyle]
-[WMMenuView setStyle:]
-[WMPageController menuViewLayoutMode]
-[WMMenuView setLayoutMode:]
-[WMPageController progressHeight]
-[WMPageController menuViewContentMargin]
-[WMMenuView setContentMargin:]
-[WMPageController progressViewBottomSpace]
-[WMMenuView setProgressViewBottomSpace:]
-[WMPageController progressViewWidths]
-[WMMenuView setProgressWidths:]
-[WMPageController progressViewIsNaughty]
-[WMMenuView setProgressViewIsNaughty:]
-[WMPageController progressViewCornerRadius]
-[WMPageController showOnNavigationBar]
-[WMMenuView setShowOnNavigationBar:]
-[WMPageController titleFontName]
-[WMPageController progressColor]
-[WMMenuView willMoveToSuperview:]
-[WMMenuView addScrollView]
-[WMMenuView contentMargin]
-[WMMenuView setScrollView:]
-[WMMenuView addItems]
-[WMMenuView calculateItemFrames]
-[WMMenuView itemMarginAtIndex:]
-[WMMenuView delegate]
-[WMPageController menuView:itemMarginAtIndex:]
-[WMPageController itemsMargins]
-[WMPageController itemMargin]
-[WMMenuView titlesCount]
-[WMMenuView dataSource]
-[WMPageController numbersOfTitlesInMenuView:]
-[WMPageController menuView:widthForItemAtIndex:]
-[WMPageController automaticallyCalculatesItemWidths]
-[WMPageController itemsWidths]
-[WMPageController menuItemWidth]
-[WMMenuView frames]
_CGSizeMake
-[WMMenuItem initWithFrame:]
-[WMMenuItem setNormalColor:]
-[WMMenuItem setSelectedColor:]
-[WMMenuItem setNormalSize:]
-[WMMenuItem setSelectedSize:]
-[WMMenuItem setupGestureRecognizer]
-[WMMenuItem setDelegate:]
-[WMPageController menuView:titleAtIndex:]
-[WMPageController titleAtIndex:]
-[XWTestHomeViewController pageController:titleAtIndex:]
-[WMMenuView sizeForState:atIndex:]
-[WMPageController menuView:titleSizeForState:atIndex:]
-[WMPageController titleSizeNormal]
-[WMPageController titleSizeSelected]
-[WMMenuView colorForState:atIndex:]
-[WMPageController menuView:titleColorForState:atIndex:]
-[WMPageController titleColorNormal]
-[WMPageController titleColorSelected]
-[WMMenuView speedFactor]
-[WMMenuItem setSpeedFactor:]
-[WMMenuView fontName]
-[WMMenuItem selectedSize]
-[WMMenuItem setSelected:withAnimation:]
-[WMMenuItem setRate:]
-[WMMenuItem normalSize]
-[WMMenuView setSelItem:]
-[WMMenuView makeStyle]
-[WMMenuView calculateProgressViewFrame]
-[WMMenuView style]
-[WMMenuView progressHeight]
-[WMMenuView progressViewBottomSpace]
-[WMMenuView progressViewCornerRadius]
-[WMMenuView addProgressViewWithFrame:isTriangle:hasBorder:hollow:cornerRadius:]
-[WMMenuView convertProgressWidthsToFrames]
-[WMMenuView progressWidths]
-[WMProgressView setItemFrames:]
-[WMMenuView lineColor]
-[WMProgressView setColor:]
-[WMProgressView setIsTriangle:]
-[WMProgressView setHasBorder:]
-[WMProgressView setHollow:]
-[WMProgressView setCornerRadius:]
-[WMMenuView progressViewIsNaughty]
-[WMProgressView setNaughty:]
-[WMProgressView setSpeedFactor:]
-[WMMenuView setProgressView:]
-[WMMenuView addBadgeViews]
-[WMMenuView addBadgeViewAtIndex:]
-[WMMenuView badgeViewAtIndex:]
-[WMMenuView resetSelectionIfNeeded]
-[WMMenuView selectIndex]
-[WMPageController setMenuView:]
-[WMPageController currentViewController]
-[WMPageController didEnterController:atIndex:]
-[WMPageController wm_postFullyDisplayedNotificationWithCurrentIndex:]
-[WMPageController infoWithIndex:]
-[WMPageController preloadPolicy]
-[XWTestHomeViewController setRedView:]
-[WMPanGestureRecognizer initWithTarget:action:]
-[XWTestHomeViewController setPanGesture:]
-[XWTestHomeViewController panGesture]
-[WMPageController wm_adjustScrollViewFrame]
-[WMPageController wm_adjustMenuViewFrame]
-[WMMenuView leftView]
-[WMMenuView rightView]
-[WMMenuView resetFrames]
-[WMMenuView resetFramesFromIndex:]
-[WMMenuView resetItemFrame:]
-[WMMenuView resetBadgeFrame:]
-[WMMenuView refreshContenOffset]
-[WMMenuView selItem]
-[WMPageController wm_adjustDisplayingViewControllersFrame]
___59-[WMPageController wm_adjustDisplayingViewControllersFrame]_block_invoke
-[WMPageController setTitleColorSelected:]
-[WMPageController setTitleColorNormal:]
-[WMPageController setSelectIndex:]
-[XWTestOneViewController init]
-[XWTabbarController setTestNavi:]
-[XWMeHomeViewController init]
-[XWTabbarController CXWVCPrivateAction:]
-[XWTabbarController hiddenTabbarTopLine]
-[AppDelegate window]
-[CXWBaseNavigationController preferredStatusBarStyle]
-[XWNewsHomeViewController viewDidLoad]
-[XWNewsHomeViewController viewWillAppear:]
-[CXWBaseViewController viewWillAppear:]
-[CXWBaseViewController navigationController:willShowViewController:animated:]
-[CXWBaseViewController needHiddenBarInViewController:]
-[XWTabbarController viewDidAppear:]
___36-[XWTabbarController viewDidAppear:]_block_invoke